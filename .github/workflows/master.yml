name: deploy to prod
on:
  release:
    types: [ published ]

jobs:
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/ayberkcakar/iml-datasoft-dl-api:${{ env.RELEASE_VERSION }}, ghcr.io/ayberkcakar/iml-datasoft-dl-api:latest
          platforms: linux/amd64,linux/arm64

  doorkeeper_open:
    name: Doorkeeper Open
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Provide doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Doorkeeper Open
        run: doctl compute firewall add-rules ${{ secrets.DIGITAL_OCEAN_FIREWALL_ID }} --inbound-rules protocol:tcp,ports:22,address:0.0.0.0/0,address:::/0

  deploy:
    runs-on: ubuntu-latest
    needs: doorkeeper_open
    name: Deploy
    steps:
      - name: Deploy version
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          user: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command: cd /root && docker-compose pull && docker-compose up --force-recreate --build -d && docker image prune -f

  doorkeeper_close:
    name: Doorkeeper Close
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Provide doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Doorkeeper Close
        run: doctl compute firewall remove-rules ${{ secrets.DIGITAL_OCEAN_FIREWALL_ID }} --inbound-rules protocol:tcp,ports:22,address:0.0.0.0/0,address:::/0